-- a
npares :: (Integral a) => [a] -> a
npares [] = 0
npares (x:xs)
	| x `mod` 2 == 0 = 1 + (npares xs)
	| otherwise = npares xs

-- b
nvogal:: (Integral i) => String -> i
nvogal [] = 0
nvogal (x:xs)
	| elem x "aeiouAEIOU" = 1 + (nvogal xs)
	| otherwise = nvogal xs

-- d
split xs = (tira n,drop n)
    where n = (length xs) `div` 2

tira n (x:xs)
    | n < 1 = []
    | otherwise = x: tira (n-1)xs
    -- | [x] ++ tira (n-1)xs

-- bubble sort
bubble [] = []
bubble xs = menor:bubble(ys)
    where (menor,ys) = removemenor xs
removemenor x = (menor,[x|x<-xs,x->menor])
    where menor = minimum xs
main = do
    print (npares [1,2,4])
    print (nvogal "Thiago Alves")
    print (tira 2 [12,35,14,65,68,22])
    print (drop 2 [12,35,14,65,68,22])
